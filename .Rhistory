fill = 'white'
) + geom_point(data = dat, aes(x = lon, y = lat), color = dat$sp) + scale_fill_brewer(palette =
"Dark2")
mp <- ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color=dat$sp)
mp + scale_fill_brewer(palette="Dark2")
mp + scale_fill_brewer(palette="YlOrRd")
mp <- ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat))
mp + scale_fill_brewer(palette="YlOrRd")
mp <- ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color=dat$id)
mp
mp + scale_fill_brewer(palette="YlOrRd")
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color=mpg)
dataset <- data.frame(category = rep(LETTERS[1:5], 100),
x = rnorm(500, mean = rep(1:5, 100)),
y = rnorm(500, mean = rep(1:5, 100)))
dataset
dataset$fCategory <- factor(dataset$category)
dataset
plot(regi)
points(dat$lat ~ dat$lon, col = "red")
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color=mpg)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color=dat$id)
View(dat)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color=dat$sp)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color=red)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color='red')
remove(dat_t, dat_t.fort)
remove(b)
remove(regi_t.fort)
remove(regi_t)
regi
regi@polygons[[1]]
regi@data$ID
regi@plotOrder
length(regi@polygons)
length(regi@polygons@Polygons)
length(regi@polygons@Polygons[[]])
length(regi@Polygons)
nPolys <- sapply(regi@polygons, function(x)length(x@Polygons))
nPolys
region <- regi[which(nPolys==max(nPolys)),]
region
remove(region)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color='red',size=4)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color='red',size=2)
nPolys
mp
regi_f <- fortify(regi)
regi_f <- fortify(regi)
library(readxl)
library(obm)
library(rgdal)
library(rgdal)
library(sp)
library(readxl)
library(rgdal)
library(ggplot2)
library(maptools)
regi_f <- fortify(regi)
regi_f
summary(regi_f$group)
names(summary(regi_f$group))
regi_f$long[regi_f$group == '0.1',]
regi_f[regi_f$group == '0.1',]$long
nPolys <- names(summary(regi_f$group))
nPolys
clas(regi_f$group)
class(regi_f$group)
class(nPolys)
nPolys <- as.factor(names(summary(regi_f$group)))
nPolys
nPolys[1]
nPolys <- as.integer(names(summary(regi_f$group)))
nPolys
nPolys <- names(summary(regi_f$group))
nPolys[1]
nPolys[2]
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$group == nPolys[1], ]$long, regi_f[regi_f$group == nPolys[1], ]$lat)
new_shape_1
li = list()
li
li = new_shape_1
li
li = list(vegioba_van = vector(length = length(dat$sp)))
li
li = list()
li$regioban_van[[1]] <- new_shape_1
li
li = list()
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$group == nPolys[i], ]$long, regi_f[regi_f$group == nPolys[i], ]$lat)
li$regioban_van[[i]] <- new_shape_1
}
li
nPolys <- names(summary(regi_f$group))
li = list()
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$group == nPolys[i], ]$long, regi_f[regi_f$group == nPolys[i], ]$lat)
li$regioban_van[[i]] <- new_shape_1
}
names(summary(regi_f$group))
regi_f
names(summary(regi_f$group))
names(summary(regi_f$piece))
summary(regi_f$piece)
names(summary(regi_f$id))
summary(regi_f$id)
regi_f[regi_f$group == '6.1',]$id
regi_f$id
summary(regi_f$id)
nPolys <- c(0:15) #a kulombozo regioknak az azonositoi, osszesen 16
li = list()
regi_f[regi_f$id == nPolys[1], ]$long
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i], ]$long, regi_f[regi_f$id == nPolys[i], ]$lat)
li$regioban_van[[i]] <- new_shape_1
}
unique(regi_f$id)
regi[0]$DENUMIRE
regi[1]$DENUMIRE
regi[1,]$DENUMIRE
li$regioban_van[[1]]
which(li$regioban_van[[1]] == 1)
which(li$regioban_van[[1]] == 0)
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
nevek
regi_fl$paste(nevek[1]) = 1
assign(paste('regi_fl$', nevek[1], sep=''), 1)
paste('regi_fl$', nevek[1], sep='')
paste('regi_fl$', 'sa', sep='')
li = list()
new_shape_2 <- numeric(0)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1, ] <- j
}
}
li$regioban_van[[i]] <- new_shape_2
}
new_shape_2 <- numeric(0)
new_shape_2[length(new_shape_2) + 1, ] <- 1
new_shape_2[length(new_shape_2) + 1] <- 1
li = list()
new_shape_2 <- numeric(0)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
li$regioban_van[[i]] <- new_shape_2
}
li = list()
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
new_shape_2 <- numeric(0)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
li$regioban_van[[i]] <- new_shape_2
}
li$regioban_van
regi_fl[[1]]$a <- nevek[1]
regi_fl$a[[1]] <- nevek[1]
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
regi_fl$a[[1]] <- nevek[1]
regi_fl$a
regi_fl
regi_fl$a[[2]] <- c(1:10)
regi_fl$a[[1]] <- nevek[1]
regi_fl$a[[2]] <- 1
regi_fl$a
regi_fl$a[[1]] <- nevek[1]
regi_fl$a[[2]] <- list(c(1:10))
regi_fl$a
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
regi_fl$a[[1]] <- nevek[1]
regi_fl$a[[2]] <- list(c(1:10))
regi_fl$b[[1]] <- nevek[2]
regi_fl$b[[2]] <- list(c(10:20))
regi_fl
regi_fl$a[1]
regi_fl$a[2]
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
regi_fl[[1]] <- list(nevek[1], list(c(1:10)))
regi_fl[[2]] <- list(nevek[2], list(c(10:20)))
regi_fl
regi_fl[1]
regi_fl[1][1]
regi_fl[[1]]
regi_fl[[1]][[1]]
regi_fl[[1]][[2]]
remove(li)
regi_f <- fortify(regi)
nPolys <- unique(regi_f$id) #a kulombozo regioknak az azonositoi, osszesen 16
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
new_shape_2 <- numeric(0)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
regi_fl[[i]] <- list(nevek[i], list(new_shape_2))
}
regi_fl[[1]][[1]]
regi_fl[[1]][[2]]
dat
regi_f <- fortify(regi)
nPolys <- unique(regi_f$id) #a kulombozo regioknak az azonositoi, osszesen 16
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
new_shape_2 <- numeric(0)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
regi_fl[[i]] <- list(nevek[i], list(dat[-new_shape_2,]))
}
regi_fl[[1]][[1]]
regi_fl[[1]][[2]]
regi_fl[[2]][[1]]
regi_fl[[2]][[2]]
regi_fl[[3]][[1]]
regi_fl[[3]][[2]]
regi_fl[[3]][[2]][1,]
regi_fl[[3]][[2]][,1]
regi_fl[[3]][[2]]
regi_fl[[3]][[2]][[1]]
regi_fl[[3]][[2]][[4]]
regi_fl[[3]][[2]][[,4]]
regi_fl[[3]][[2]][[2]]
regi_fl[[3]][[2]]$id
regi_fl[[3]][[2]]$sp
regi_fl[[3]][2]
regi_fl[[3]][2][,1]
regi_fl[[3]][,2]
regi_fl[[3]][2][,2]
regi_fl[[3]][[2]][,2]
regi_fl[[1]][[2]][,2]
regi_fl[[1]][[2]][2]
regi_fl[[1]][[2]][3]
regi_fl[[1]][[2]][4]
regi_fl[[1]][[2]][4,]
regi_fl[[1]][[2]][1][1]
regi_fl[[2]][[2]][1][1]
regi_fl[[2]][[2]][1][2]
regi_fl[[2]][[2]][2][2]
regi_fl[[2]][[2]][2][1]
regi_fl[[2]][[2]][2]
regi_fl[[2]][[2]][[2]]
regi_fl[[2]][[2]][2,]
regi_fl[[2]][[2]][,,2]
regi_fl[[2]][[2]][,2,]
regi_fl[[2]][[2]][2,,]
li = list(matrix(c(1:25), nrow = 5))
libcurlVersion()
li
li[[1]]
li[[1]][1]
li[[1]][2]
li[[1]][3]
li[[1]][,1]
li[[1]][1,]
li = list(list(matrix(c(1:25), nrow = 5)))
li
li[[1]]
li[[1]][[1]]
li[[1]][[1]][1]
li[[1]][[1]][2]
li[[1]][[1]][3]
regi_fl[[2]][[2]][2,,]
regi_fl[[2]][[2]]
regi_fl[[2]][[2]]['id']
class(regi_fl[[2]][[2]])
regi_fl[[2]][[2]]
regi_fl[[2]][[2]][[]]
regi_fl[[2]][[2]][[1]]
regi_fl[[2]][[2]][[1]][1]
regi_fl[[2]][[2]][[1]][2]
{
#nPolys <- sapply(regi@polygons, function(x)length(x@Polygons)) #megmondja hogy melyik polygon, hany reszbol all
regi_f <- fortify(regi)
nPolys <- unique(regi_f$id) #a kulombozo regioknak az azonositoi, osszesen 16
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
new_shape_2 <- numeric(0)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
regi_fl[[i]] <- list(nevek[i], dat[-new_shape_2,])
}
#a regi_fl[[1]][[1]] tartalmazza a regio nevet, a regi_fl[[1]][[2]] tartalmazza a regioba talalhato pontokat
#rei_fl[[i]] az i edik regio informacioi (osszesen 16 van)
} #regionkent lekerdezzuk a pontokat
remove(li)
regi_fl[[1]]
regi_fl[[2]]
regi_fl[[3]]
regi_fl[[3]][1]
regi_fl[[3]][2]
regi_fl[[2]][2]
regi_fl[[2]][[2]]
regi_fl[[2]][[2]][,1]
regi_fl[[2]][[2]][1,]
library(obm)
library(rgdal)
library(rgdal)
library(sp)
library(readxl)
library(maptools)
library(rgdal)
library(ggplot2)
OBM_init('transdiptera')
tokeRn <- OBM_auth('veres_robi75@yahoo.com', '123456')
t_data <- OBM_get('get_data', '*')
t_data <- data.frame(t_data)
t_data[, 2:8] <- NULL #kivesz egy par oszlopot
regi <- readOGR("/home/robi/Allamvizsga/Qgis/Regiune/Regiune.shp", layer = "Regiune")
rom <- readOGR("/home/robi/Allamvizsga/Qgis/Subregiune/Romania_teljes.shp", layer = "Romania_teljes")
tipuloidae <- read_excel("~/Allamvizsga/Fajlista_teljes.xlsx", sheet = "Tipulidae")
id <- unlist(t_data$obm_id)
la <- unlist(t_data$latitude)
lo <- unlist(t_data$longitude)
sp <- unlist(t_data$species_id)
dat <- data.frame(id = id, lon = lo, lat = la, fam = NA, subfam = NA, gen = NA, subgen = NA, spec = NA, subspec = NA, sp = sp)
{
a <- numeric(0)
for (i in 1:length(dat$sp)) {
x <- match(dat[i, ]$sp, tipuloidae$taxon_id)
if (!is.na(x)) {
dat[i, ]$fam <- tipuloidae[x, ]$family
dat[i, ]$subfam <- tipuloidae[x, ]$subfamily
dat[i, ]$gen <- tipuloidae[x, ]$genera
dat[i, ]$subgen <- tipuloidae[x, ]$subgenera
dat[i, ]$spec <- tipuloidae[x, ]$species
dat[i, ]$subspec <- tipuloidae[x, ]$subspecies
} else {
a[length(a) + 1] <- i
}
}
dat <- dat[-a,]
} #kiszurjuk a Tipulidae adatokat es beszurjuk a besorolast
# b <- matrix(c(1:25), nrow = 5)
# apply(b, 1, function(i, q)
#   i[1] > q, q = 1)
# sapply(b[, 2:3], function(i)
#   i[2] > i[3])
#coordinates(dat) <- ~lon + lat #spatial point  dataframe
#proj4string(dat) <- proj4string(rom) #atalakitas???
#regi@polygons[[1]]@Polygons[[2]]@coords[,1]
{
new_shape_1 <-
point.in.polygon(
dat$lon,
dat$lat,
rom@polygons[[1]]@Polygons[[1]]@coords[, 1],
rom@polygons[[1]]@Polygons[[1]]@coords[, 2]
)
a <- numeric(0)
for (i in 1:length(new_shape_1)) {
if (new_shape_1[i] == 0) {
a[length(a) + 1] = i
}
}
dat <- dat[-a, ]
} #kiszurjuk azokat az adatokat, amelyek Romaniaba vannak
# plot(regi)
# points(dat$lat ~ dat$lon, col = "red")
mp <- ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color='red',size=2)
{
#nPolys <- sapply(regi@polygons, function(x)length(x@Polygons)) #megmondja hogy melyik polygon, hany reszbol all
regi_f <- fortify(regi)
nPolys <- unique(regi_f$id) #a kulombozo regioknak az azonositoi, osszesen 16
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
new_shape_2 <- numeric(0)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
regi_fl[[i]] <- list(nevek[i], dat[-new_shape_2,])
}
#a regi_fl[[1]][[1]] tartalmazza a regio nevet, a regi_fl[[1]][[2]] tartalmazza a regioba talalhato pontokat
#rei_fl[[i]] az i edik regio informacioi (osszesen 16 van)
#pl: regi_fl[[2]][[2]][1,] parancsal lehet elerni a masodik listaba levo data frame elemeit
} #regionkent lekerdezzuk a pontokat
nPolys <- unique(regi_f$id)
nPolys
regi_fl[[7]]
length(regi_fl)
for (i in 1:length(regi_fl)) {
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[i]][[2]], aes(x=lon, y=lat), color='red',size=2)
}
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[i]][[2]], aes(x=lon, y=lat), color='red',size=2)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[1]][[2]], aes(x=lon, y=lat), color='red',size=2)
mp <- numeric(0)
for (i in 1:length(regi_fl)) {
mp[i] <- ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[1]][[2]], aes(x=lon, y=lat), color='red',size=2)
}
mp[1]
warning()
mp <- numeric(0)
for (i in 1:length(regi_fl)) {
mp[i] <- ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[i]][[2]], aes(x=lon, y=lat), color='red',size=2)
}
warning()
mp[1]
mp[2]
mp <- numeric(0)
for (i in 1:length(regi_fl)) {
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[i]][[2]], aes(x=lon, y=lat), color='red',size=2)
}
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[1]][[2]], aes(x=lon, y=lat), color='red',size=2)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[2]][[2]], aes(x=lon, y=lat), color='red',size=2)
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[3]][[2]], aes(x=lon, y=lat), color='red',size=2)
regi_fl[[3]][[2]],
regi_fl[[3]][[2]]
regi_fl[[2]][[2]]
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=regi_fl[[2]][[2]], aes(x=lon, y=lat), color='red',size=2)
ggplot()
geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white')
geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white')
geom_point(data=regi_fl[[2]][[2]], aes(x=lon, y=lat), color='red',size=2)
for (i in 1:length(regi_fl)) {
ggplot() +
geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data=regi_fl[[2]][[2]], aes(x=lon, y=lat), color='red',size=2)
}
mp <- numeric(0)
mp <- numeric(0)
for (i in 1:length(regi_fl)) {
mp <- ggplot() +
geom_polygon(
data = regi,
aes(long, lat, group = group),
colour = 'black',
fill = 'white'
) +
geom_point(data = regi_fl[[2]][[2]],
aes(x = lon, y = lat),
color = 'red',
size = 2)
mp
}
ggplot() +
geom_polygon(
data = regi,
aes(long, lat, group = group),
colour = 'black',
fill = 'white'
) +
geom_point(data = regi_fl[[2]][[2]],
aes(x = lon, y = lat),
color = 'red',
size = 2)
for (i in 1:length(regi_fl)) {
print(ggplot() + geom_polygon(data = regi, aes(long, lat, group = group), colour = 'black', fill = 'white') + geom_point(data = regi_fl[[i]][[2]], aes(x = lon, y = lat), color = 'red', size = 2))
}
data = regi_fl[[1]][[1]]
regi_fl[[1]][[1]]
for (i in 1:length(regi_fl)) {
print(
ggplot() + geom_polygon(
data = regi,
aes(long, lat, group = group),
colour = 'black',
fill = 'white'
) + geom_point(
data = regi_fl[[i]][[2]],
aes(x = lon, y = lat),
color = 'red',
size = 2
) + ggtitle(data = regi_fl[[i]][[1]])
)
}
for (i in 1:length(regi_fl)) {
print(
ggplot() + geom_polygon(
data = regi,
aes(long, lat, group = group),
colour = 'black',
fill = 'white'
) + geom_point(
data = regi_fl[[i]][[2]],
aes(x = lon, y = lat),
color = 'red',
size = 2
) + ggtitle(regi_fl[[i]][[1]])
)
}
