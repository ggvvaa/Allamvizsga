scale_y_continuous(name="") +
geom_polygon(data = rom, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data = centroids, aes(x = x, y = y, shape = factor(s), colour = factor(s)), size = 4) +
geom_text(data = centroids, vjust = 0, nudge_y = 0.1, aes(x = x, y = y, label = centroids$regiune))
} #regionkenti centroidok meghatarozasa + kategorizalas
for (i in 1:length(regi_fl)) {
print(
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = regi, aes(long, lat, group = group), colour = 'black', fill = 'white') +
eom_point(data = regi_fl[[i]][[2]],  aes(x = lon, y = lat), color = 'red', size = 2) +
ggtitle(regi_fl[[i]]$adatok$nev)
)
} #pontok regionkent
{
centroids <- data.frame(gCentroid(regi, byid = TRUE))
centroids$regiune <- regi$REGIUNE
s <-
c(
'podis' ,
'campie',
'carpati',
'depresiune',
'dealuri',
'carpati',
'dealuri',
'carpati',
'carpati',
'carpati',
'dealuri',
'campie',
'podis',
'podis',
'campie',
'carpati'
)
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = rom, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data = centroids, aes(x = x, y = y, shape = factor(s), colour = factor(s)), size = 4) +
geom_text(data = centroids, vjust = 0, nudge_y = 0.1, aes(x = x, y = y, label = centroids$regiune))
} #regionkenti centroidok meghatarozasa + kategorizalas
for (i in 1:length(regi_fl)) {
print(
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = regi, aes(long, lat, group = group), colour = 'black', fill = 'white') +
eom_point(data = regi_fl[[i]][[2]],  aes(x = lon, y = lat), color = 'red', size = 2) +
ggtitle(regi_fl[[i]]$adatok$nev)
)
} #pontok regionkent
for (i in 1:length(regi_fl)) {
print(
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = regi, aes(long, lat, group = group), colour = 'black', fill = 'white') +
geom_point(data = regi_fl[[i]][[2]],  aes(x = lon, y = lat), color = 'red', size = 2) +
ggtitle(regi_fl[[i]]$adatok$nev)
)
} #pontok regionkent
{
centroids <- data.frame(gCentroid(regi, byid = TRUE))
centroids$regiune <- regi$REGIUNE
s <-
c(
'podis' ,
'campie',
'carpati',
'depresiune',
'dealuri',
'carpati',
'dealuri',
'carpati',
'carpati',
'carpati',
'dealuri',
'campie',
'podis',
'podis',
'campie',
'carpati'
)
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = rom, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data = centroids, aes(x = x, y = y, shape = factor(s), colour = factor(s)), size = 4) +
geom_text(data = centroids, vjust = 0, nudge_y = 0.1, aes(x = x, y = y, label = centroids$regiune))
} #regionkenti centroidok meghatarozasa + kategorizalas
regi_fl[[2]]
unique(regi_fl[[2]]$fajok$sp)
length(unique(regi_fl[[2]]$fajok$sp))
library(obm)
library(rgdal)
library(rgdal)
library(rgeos)
library(sp)
library(readxl)
library(maptools)
library(rgdal)
library(ggplot2)
#1
{
OBM_init('transdiptera')
tokeRn <- OBM_auth('veres_robi75@yahoo.com', '123456')
t_data <- OBM_get('get_data', '*')
t_data <- data.frame(t_data)
t_data[, 2:8] <- NULL #kivesz egy par oszlopot
regi <- readOGR("/home/robi/Allamvizsga/Qgis/Regiune/Regiune.shp", layer = "Regiune")
rom <- readOGR("/home/robi/Allamvizsga/Qgis/Subregiune/Romania_teljes.shp", layer = "Romania_teljes")
tipuloidae <- read_excel("~/Allamvizsga/Fajlista_teljes.xlsx", sheet = "Tipulidae")
id <- unlist(t_data$obm_id)
la <- unlist(t_data$latitude)
lo <- unlist(t_data$longitude)
sp <- unlist(t_data$species_id)
dat <- data.frame(id = id, lon = lo, lat = la, fam = NA, subfam = NA, gen = NA, subgen = NA, spec = NA, subspec = NA, auth = NA, sp = sp)
} #kiindulasi adatok lekerdezese
#2
{
a <- numeric(0)
for (i in 1:length(dat$sp)) {
x <- match(dat[i, ]$sp, tipuloidae$taxon_id)
if (!is.na(x)) {
dat[i, ]$fam <- tipuloidae[x, ]$family
dat[i, ]$subfam <- tipuloidae[x, ]$subfamily
dat[i, ]$gen <- tipuloidae[x, ]$genera
dat[i, ]$subgen <- tipuloidae[x, ]$subgenera
dat[i, ]$spec <- tipuloidae[x, ]$species
dat[i, ]$subspec <- tipuloidae[x, ]$subspecies
dat[i, ]$auth <- tipuloidae[x, ]$author
} else {
a[length(a) + 1] <- i
}
}
dat <- dat[-a,]
} #kiszurjuk a Tipulidae adatokat es beszurjuk a besorolast
# b <- matrix(c(1:25), nrow = 5)
# apply(b, 1, function(i, q)
#   i[1] > q, q = 1)
# sapply(b[, 2:3], function(i)
#   i[2] > i[3])
#coordinates(dat) <- ~lon + lat #spatial point  dataframe
#proj4string(dat) <- proj4string(rom) #atalakitas???
#regi@polygons[[1]]@Polygons[[2]]@coords[,1]
#3
{
new_shape_1 <-
point.in.polygon(
dat$lon,
dat$lat,
rom@polygons[[1]]@Polygons[[1]]@coords[, 1],
rom@polygons[[1]]@Polygons[[1]]@coords[, 2]
)
a <- numeric(0)
for (i in 1:length(new_shape_1)) {
if (new_shape_1[i] == 0) {
a[length(a) + 1] = i
}
}
dat <- dat[-a, ]
} #kiszurjuk azokat az adatokat, amelyek Romaniaba vannak
# plot(regi)
# points(dat$lat ~ dat$lon, col = "red")
ggplot() + geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') + geom_point(data=dat, aes(x=lon, y=lat), color='red',size=2)
#4
{
#nPolys <- sapply(regi@polygons, function(x)length(x@Polygons)) #megmondja hogy melyik polygon, hany reszbol all
regi_f <- fortify(regi)
nPolys <- unique(regi_f$id) #a kulombozo regioknak az azonositoi, osszesen 16
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
new_shape_2 <- numeric(0)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
fajok = dat[-new_shape_2,]
corr = length(unique(fajok$sp))/(regi$Terulet[i]/1000) #a terulet milyen formaba szerepeljen?
regi_fl[[i]] <- list(adatok = data.frame(nev = nevek[i], terulet = regi$Terulet[i], corr = corr), fajok = fajok)
}
#a regi_fl[[1]][[1]] tartalmazza a regio nevet, a regi_fl[[1]][[2]] tartalmazza a regioba talalhato pontokat
#rei_fl[[i]] az i edik regio informacioi (osszesen 16 van)
#pl: regi_fl[[2]][[2]][1,] parancsal lehet elerni a masodik listaba levo data frame elemeit
} #regionkent lekerdezzuk a pontokat
for (i in 1:length(regi_fl)) {
print(
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = regi, aes(long, lat, group = group), colour = 'black', fill = 'white') +
geom_point(data = regi_fl[[i]][[2]],  aes(x = lon, y = lat), color = 'red', size = 2) +
ggtitle(regi_fl[[i]]$adatok$nev)
)
} #pontok regionkent
#5
{
centroids <- data.frame(gCentroid(regi, byid = TRUE))
centroids$regiune <- regi$REGIUNE
s <-
c(
'podis' ,
'campie',
'carpati',
'depresiune',
'dealuri',
'carpati',
'dealuri',
'carpati',
'carpati',
'carpati',
'dealuri',
'campie',
'podis',
'podis',
'campie',
'carpati'
)
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = rom, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data = centroids, aes(x = x, y = y, shape = factor(s), colour = factor(s)), size = 4) +
geom_text(data = centroids, vjust = 0, nudge_y = 0.1, aes(x = x, y = y, label = centroids$regiune))
} #regionkenti centroidok meghatarozasa + kategorizalas
regi_fl[[2]]
lapply(regi_fl, function(x) {lapply(x, identity)})
lapply(regi_fl, function(x) {lapply(x$fajok, identity)})
lapply(regi_fl, function(x) {lapply(x$adatk, identity)})
lapply(regi_fl, function(x) {lapply(x$adatok, identity)})
regi_fl[[2]]$adatok[3]
regi_fl[[2]]$adatok[,3]
regi_fl[[2]]$adatok
lapply(regi_fl, function(x) {lapply(x$adatok, function(y) {lapply(y[,3], identity)})})
lapply(regi_fl, function(x) {lapply(x$adatok, function(y) {lapply(y[3], identity)})})
lapply(regi_fl, function(x) {lapply(x$adatok$corr, identity)})
unlist(lapply(regi_fl, function(x) {lapply(x$adatok$corr, identity)}))
library(maxent)
data("NYTimes")
View(NYTimes)
NYTimes$Article_ID.Date.Title.Subject.Topic.Code
data <- read.csv(system.file("data/NYTimes.csv.gz",package="maxent"))
View(data)
remove(NYTimes, data)
install.packages("rJava")
install.packages("dismo")
library(obm)
library(rgdal)
library(rgdal)
library(rgeos)
library(sp)
library(readxl)
library(maptools)
library(rgdal)
library(ggplot2)
#1
{
OBM_init('transdiptera')
tokeRn <- OBM_auth('veres_robi75@yahoo.com', '123456')
t_data <- OBM_get('get_data', '*')
t_data <- data.frame(t_data)
t_data[, 2:8] <- NULL #kivesz egy par oszlopot
regi <- readOGR("/home/robi/Allamvizsga/Qgis/Regiune/Regiune.shp", layer = "Regiune")
rom <- readOGR("/home/robi/Allamvizsga/Qgis/Subregiune/Romania_teljes.shp", layer = "Romania_teljes")
tipuloidae <- read_excel("~/Allamvizsga/Fajlista_teljes.xlsx", sheet = "Tipulidae")
id <- unlist(t_data$obm_id)
la <- unlist(t_data$latitude)
lo <- unlist(t_data$longitude)
sp <- unlist(t_data$species_id)
dat <- data.frame(id = id, lon = lo, lat = la, fam = NA, subfam = NA, gen = NA, subgen = NA, spec = NA, subspec = NA, auth = NA, sp = sp)
} #kiindulasi adatok lekerdezese
#2
{
a <- numeric(0)
for (i in 1:length(dat$sp)) {
x <- match(dat[i, ]$sp, tipuloidae$taxon_id)
if (!is.na(x)) {
dat[i, ]$fam <- tipuloidae[x, ]$family
dat[i, ]$subfam <- tipuloidae[x, ]$subfamily
dat[i, ]$gen <- tipuloidae[x, ]$genera
dat[i, ]$subgen <- tipuloidae[x, ]$subgenera
dat[i, ]$spec <- tipuloidae[x, ]$species
dat[i, ]$subspec <- tipuloidae[x, ]$subspecies
dat[i, ]$auth <- tipuloidae[x, ]$author
} else {
a[length(a) + 1] <- i
}
}
dat <- dat[-a,]
} #kiszurjuk a Tipulidae adatokat es beszurjuk a besorolast
# b <- matrix(c(1:25), nrow = 5)
# apply(b, 1, function(i, q)
#   i[1] > q, q = 1)
# sapply(b[, 2:3], function(i)
#   i[2] > i[3])
#coordinates(dat) <- ~lon + lat #spatial point  dataframe
#proj4string(dat) <- proj4string(rom) #atalakitas???
#regi@polygons[[1]]@Polygons[[2]]@coords[,1]
#3
{
new_shape_1 <-
point.in.polygon(
dat$lon,
dat$lat,
rom@polygons[[1]]@Polygons[[1]]@coords[, 1],
rom@polygons[[1]]@Polygons[[1]]@coords[, 2]
)
a <- numeric(0)
for (i in 1:length(new_shape_1)) {
if (new_shape_1[i] == 0) {
a[length(a) + 1] = i
}
}
dat <- dat[-a, ]
} #kiszurjuk azokat az adatokat, amelyek Romaniaba vannak
# plot(regi)
# points(dat$lat ~ dat$lon, col = "red")
ggplot() +
geom_polygon(data = regi, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data=dat, aes(x=lon, y=lat), color='red',size=2)
#4
{
#nPolys <- sapply(regi@polygons, function(x)length(x@Polygons)) #megmondja hogy melyik polygon, hany reszbol all
regi_f <- fortify(regi)
nPolys <- unique(regi_f$id) #a kulombozo regioknak az azonositoi, osszesen 16
regi_fl = list()
nevek <- as.character(regi$DENUMIRE)
for (i in 1:length(nPolys)) {
new_shape_1 <- point.in.polygon(dat$lon, dat$lat, regi_f[regi_f$id == nPolys[i],]$long, regi_f[regi_f$id == nPolys[i],]$lat)
new_shape_2 <- numeric(0)
for (j in 1:length(new_shape_1)) {
if (new_shape_1[j] == 0) {
new_shape_2[length(new_shape_2) + 1] <- j
}
}
fajok = dat[-new_shape_2,]
corr = length(unique(fajok$sp))/(regi$Terulet[i]/1000) #a terulet milyen formaba szerepeljen?
regi_fl[[i]] <- list(adatok = data.frame(nev = nevek[i], terulet = regi$Terulet[i], telj_fsz = length(unique(fajok$sp)), corr_fsz = corr), fajok = fajok)
}
#a regi_fl[[1]][[1]] tartalmazza a regio nevet, a regi_fl[[1]][[2]] tartalmazza a regioba talalhato pontokat
#rei_fl[[i]] az i edik regio informacioi (osszesen 16 van)
#pl: regi_fl[[2]][[2]][1,] parancsal lehet elerni a masodik listaba levo data frame elemeit
} #regionkent lekerdezzuk a pontokat
for (i in 1:length(regi_fl)) {
print(
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = regi, aes(long, lat, group = group), colour = 'black', fill = 'white') +
geom_point(data = regi_fl[[i]][[2]],  aes(x = lon, y = lat), color = 'red', size = 2) +
ggtitle(regi_fl[[i]]$adatok$nev)
)
} #pontok regionkenti kirajzolasa
#5
{
centroids <- data.frame(gCentroid(regi, byid = TRUE))
centroids$regiune <- regi$REGIUNE
s <-
c(
'podis' ,
'campie',
'carpati',
'depresiune',
'dealuri',
'carpati',
'dealuri',
'carpati',
'carpati',
'carpati',
'dealuri',
'campie',
'podis',
'podis',
'campie',
'carpati'
)
ggplot() +
scale_x_continuous(name="") +
scale_y_continuous(name="") +
geom_polygon(data = rom, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data = centroids, aes(x = x, y = y, shape = factor(s), colour = factor(s)), size = 4) +
geom_text(data = centroids, vjust = 0, nudge_y = 0.1, aes(x = x, y = y, label = centroids$regiune))
} #regionkenti centroidok meghatarozasa + kategorizalas
#6
{
df <- data.frame(matrix(vector(), 0, 4, dimnames = list(c(), c('regio', 'terulet', 'teles_fajszam', 'korrekcios_fajszam'))), stringsAsFactors=F)
for (i in 1:length(regi_fl)) {
df[i,]$regio <- unlist(strsplit(as.character(regi_fl[[i]]$adatok$nev), ' - '))[2]
df[i,]$terulet <- regi_fl[[i]]$adatok$terulet
df[i,]$teles_fajszam <- regi_fl[[i]]$adatok$telj_fsz
df[i,]$korrekcios_fajszam <- regi_fl[[i]]$adatok$corr_fsz
}
} #Statisztikahoz elokeszitjuk az adatokat
library(dismo)
library(raster)
library(rJava)
#vilag <- readOGR("/home/robi/Qgis/Orszaghatarok/TM_WORLD_BORDERS-0.3.shp")
eur <- readOGR("/home/robi/Qgis/Europa/Europe_coastline_poly_WGS84.shp")
ggplot() +
geom_polygon(data = eur, aes(long, lat, group=group), colour='black',fill='white') +
geom_point(data=dat, aes(x=lon, y=lat), color='red',size=2)
files <- list.files("../Maxent/maxent_pelda", pattern='asc', full.names=TRUE )
predictors <- stack(files)
plot(predictors)
pontok <- dat[,2:3]
presvals <- extract(predictors, pontok)
set.seed(0)
backgr <- randomPoints(predictors, 5000)
absvals <- extract(predictors, backgr)
pb <- c(rep(1, nrow(presvals)), rep(0, nrow(absvals)))
sdmdata <- data.frame(cbind(pb, rbind(presvals, absvals)))
sdmdata[,'ALTA'] = as.factor(sdmdata[,'ALTA'])
predictors$ALTA@nrows
predictors$ALTA@data@attributes
predictors$ALTA@data@attributes[[1]]
predictors$ALTA@data@attributes[[2]]
predictors$ALTA@data@attributes[1]
predictors$ALTA@data@attributes[2]
xm <- maxent(predictors, sdmdata, factors = 'ALTA')
plot(xm)
xm <- maxent(x = predictors, p = sdmdata, factors = 'ALTA')
lass(sdmdata)
class(sdmdata)
class(predictors)
fnames <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''), pattern='grd', full.names=TRUE )
predictors_c <- stack(fnames)
plot(predictors_c)
occurence <- paste(system.file(package="dismo"), '/ex/bradypus.csv', sep='')
occ <- read.table(occurence, header=TRUE, sep=',')[,-1]
View(occ)
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
me <- maxent(predictors, occtrain, factors='biome')
me <- maxent(predictors_c, occtrain, factors='biome')
plot(me)
me2 <- maxent(predictors_c, occtrain, factors='biome', args=c("-J", "-P"))
plot(me2)
response(me)
r <- predict(me, predictors)
plot(r)
points(occ)
r <- predict(me, predictors_c)
plot(r)
points(occ)
me <- maxent(predictors_c, occtrain, factors='biome')
r <- predict(me, predictors_c)
plot(r)
r <- predict(me, predictors, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.grd')
r <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.grd')
plot(r)
points(occ)
r <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.png')
r <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.png')
r <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.grd', overwrite=TRUE)
rr <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.grd', overwrite=TRUE)
r <- predict(me, predictors_c)
plot(r)
plot(r)
predictors <- stack(files)
library(obm)
library(rgdal)
library(rgdal)
library(rgeos)
library(sp)
library(readxl)
library(maptools)
library(rgdal)
library(ggplot2)
install.packages(c("RcppEigen", "survival"))
library(dismo)
library(raster)
library(rJava)
names <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''), pattern='grd', full.names=TRUE )
predictors_c <- stack(fnames)
plot(predictors_c)
occurence <- paste(system.file(package="dismo"), '/ex/bradypus.csv', sep='')
occ <- read.table(occurence, header=TRUE, sep=',')[,-1]
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
me <- maxent(predictors_c, occtrain, factors='biome')
plot(me)
fnames <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''), pattern='grd', full.names=TRUE )
predictors_c <- stack(fnames)
plot(predictors_c)
occurence <- paste(system.file(package="dismo"), '/ex/bradypus.csv', sep='')
occ <- read.table(occurence, header=TRUE, sep=',')[,-1]
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
me <- maxent(predictors_c, occtrain, factors='biome')
plot(me)
r <- predict(me, predictors_c)
plot(r)
points(occ)
rr <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.grd', overwrite=TRUE)
rr <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.grd', overwrite=TRUE)
rr <- predict(me, predictors_c, args=c("outputformat=raw"), progress='text', filename='maxent_prediction.tif', overwrite=TRUE)
rr <- predict(me, predictors_c, filename='maxent_prediction.tif', overwrite=TRUE)
r <- predict(me, predictors_c)
plot(r)
r
rr <- predict(me, predictors_c, filename='maxent_prediction.asc', overwrite=TRUE)
rr <- predict(me, predictors_c, filename='maxent_prediction.jpg', overwrite=TRUE)
rr <- predict(me, predictors_c, filename='maxent_prediction', overwrite=TRUE)
